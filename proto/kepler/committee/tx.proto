syntax = "proto3";
package kepler.committee;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "kepler/committee/params.proto";

option go_package = "kepler/x/committee/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
  
  rpc CommitRandao(MsgCommitRandao) returns (MsgCommitRandaoResponse);
  rpc RevealRandao(MsgRevealRandao) returns (MsgRevealRandaoResponse);
}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  //
  // NOTE: All parameters must be supplied.
  Params params = 2 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

// RANDAO Commit Phase
message MsgCommitRandao {
  option (cosmos.msg.v1.signer) = "validator";

  option (gogoproto.equal) = false;

  string validator = 1 [(cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
  string execution_chain_id = 2;
  // epoch_id is the epoch at which commit phase of randao started
  uint64 epoch_id = 3;
  bytes commitment_hash = 4;
}

message MsgCommitRandaoResponse {}

// RANDAO Reveal Phase
message MsgRevealRandao {
  option (cosmos.msg.v1.signer) = "validator";
  
  option (gogoproto.equal) = false;

  string validator = 1 [(cosmos_proto.scalar) = "cosmos.ValidatorAddressString"];
  string execution_chain_id = 2;
  // epoch_id is the epoch at which commit phase of randao started (current_epoch - 1)
  uint64 epoch_id = 3;
  bytes random_seed = 4; // Original secret
}

message MsgRevealRandaoResponse {}
