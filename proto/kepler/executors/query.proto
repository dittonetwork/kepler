syntax = "proto3";
package kepler.executors;

import "google/api/annotations.proto";
import "kepler/executors/executor.proto";

option go_package = "github.com/dittonetwork/kepler/x/executors/types";

// Query defines the gRPC querier service.
service Query {
  // GetActiveExecutors returns active executors.
  rpc GetActiveExecutors(QueryActiveExecutorsRequest) returns (QueryActiveExecutorsResponse) {
    option (google.api.http) = {get: "/kepler/executors/v1/active_list"};
  }
  // GetEmergencyExecutors returns a list of emergency executors. They are also active.
  rpc GetEmergencyExecutors(QueryEmergencyExecutorsRequest) returns (QueryEmergencyExecutorsResponse) {
    option (google.api.http) = {get: "/kepler/executors/v1/emergency_list"};
  }
}

// QueryExecutorsRequest defines a request to fetch all active executors.
message QueryActiveExecutorsRequest {}

// QueryActiveExecutorsResponse defines a response containing a list of active executors.
message QueryActiveExecutorsResponse {
  // executors list of active executors.
  repeated Executor executors = 1;
}

// QueryEmergencyExecutorsRequest defines a request to fetch emergency executors.
message QueryEmergencyExecutorsRequest {}

// QueryEmergencyExecutorsResponse defines a response containing a list of emergency executors.
message QueryEmergencyExecutorsResponse {
  // executors list of emergency executors.
  repeated Executor executors = 1;
}
