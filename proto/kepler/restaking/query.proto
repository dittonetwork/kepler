syntax = "proto3";
package kepler.restaking;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "kepler/restaking/validator.proto";

option go_package = "github.com/dittonetwork/kepler/x/restaking/types";

// Query defines the gRPC querier service.
service Query {
  // PendingValidators returns currently pending validators of the module.
  rpc PendingValidators(QueryPendingValidatorsRequest) returns (QueryPendingValidatorsResponse) {
    option (google.api.http).get = "/dittonetwork/kepler/restaking/v1/pending_validators";
  }

  // Retrieve a list of all validators.
  rpc Validators(QueryValidatorsRequest) returns (QueryValidatorsResponse) {
    option (google.api.http).get = "/dittonetwork/kepler/restaking/validators";
  }
}

// QueryPendingValidatorsRequest is the request type for the Query/PendingValidators RPC method.
message QueryPendingValidatorsRequest {}

// QueryPendingValidatorsResponse is the response type for the Query/PendingValidators RPC method.
message QueryPendingValidatorsResponse {
  // Pending is the returned pending validators from the module.
  repeated Validator pending = 1 [(gogoproto.nullable) = false];
}

// QueryValidatorsRequest is the request type for the Query/Validators RPC method.
message QueryValidatorsRequest {}

// QueryValidatorsResponse is the response type for the Query/Validators RPC method.
message QueryValidatorsResponse {
  // validators is a list of validators.
  repeated Validator validators = 1;
}
