syntax = "proto3";
package kepler.restaking;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/dittonetwork/kepler/x/restaking/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // Complete the bonding process for a validator recognized in Bonding status.
  rpc BondValidator(MsgBondValidator) returns (MsgBondValidatorResponse);
}

// MsgBondValidator is the request type for the Msg/BondValidator RPC method.
message MsgBondValidator {
  option (amino.name) = "kepler/x/restaking/MsgBondValidator";
  option (cosmos.msg.v1.signer) = "owner";

  // owner is the address of the validator operator.
  string owner = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

// MsgBondValidatorResponse is the response type for the Msg/BondValidator RPC method.
message MsgBondValidatorResponse {}
