syntax = "proto3";

package kepler.symbiotic;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "kepler/symbiotic/params.proto";
import "kepler/symbiotic/staked_amount_info.proto";
import "kepler/symbiotic/contract_address.proto";

option go_package = "kepler/x/symbiotic/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  
  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams           (MsgUpdateParams          ) returns (MsgUpdateParamsResponse          );
  rpc CreateStakedAmountInfo (MsgCreateStakedAmountInfo) returns (MsgCreateStakedAmountInfoResponse);
  rpc UpdateStakedAmountInfo (MsgUpdateStakedAmountInfo) returns (MsgUpdateStakedAmountInfoResponse);
  rpc DeleteStakedAmountInfo (MsgDeleteStakedAmountInfo) returns (MsgDeleteStakedAmountInfoResponse);
  rpc CreateContractAddress  (MsgCreateContractAddress ) returns (MsgCreateContractAddressResponse );
  rpc UpdateContractAddress  (MsgUpdateContractAddress ) returns (MsgUpdateContractAddressResponse );
  rpc DeleteContractAddress  (MsgDeleteContractAddress ) returns (MsgDeleteContractAddressResponse );
}
// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) =                          "authority";
  option           (amino.name) = "kepler/x/symbiotic/MsgUpdateParams";
  
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgCreateStakedAmountInfo {
  option (cosmos.msg.v1.signer) = "creator";
  string creator         = 1;
  string ethereumAddress = 2;
  string stakedAmount    = 3;
  uint64 lastUpdated     = 4;
}

message MsgCreateStakedAmountInfoResponse {}

message MsgUpdateStakedAmountInfo {
  option (cosmos.msg.v1.signer) = "creator";
  string creator         = 1;
  string ethereumAddress = 2;
  string stakedAmount    = 3;
  uint64 lastUpdated     = 4;
}

message MsgUpdateStakedAmountInfoResponse {}

message MsgDeleteStakedAmountInfo {
  option (cosmos.msg.v1.signer) = "creator";
  string creator         = 1;
  string ethereumAddress = 2;
}

message MsgDeleteStakedAmountInfoResponse {}

message MsgCreateContractAddress {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  string address = 3;
}

message MsgCreateContractAddressResponse {}

message MsgUpdateContractAddress {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  string address = 3;
}

message MsgUpdateContractAddressResponse {}

message MsgDeleteContractAddress {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
}

message MsgDeleteContractAddressResponse {}

