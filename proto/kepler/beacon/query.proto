syntax = "proto3";

package kepler.beacon;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "kepler/beacon/params.proto";
import "kepler/beacon/finalized_block_info.proto";

option go_package = "kepler/x/beacon/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/kepler/beacon/params";
  
  }
  
  // Queries a FinalizedBlockInfo by index.
  rpc FinalizedBlockInfo (QueryGetFinalizedBlockInfoRequest) returns (QueryGetFinalizedBlockInfoResponse) {
    option (google.api.http).get = "/kepler/beacon/finalized_block_info";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message QueryGetFinalizedBlockInfoRequest {}

message QueryGetFinalizedBlockInfoResponse {
  FinalizedBlockInfo FinalizedBlockInfo = 1 [(gogoproto.nullable) = false];
}

