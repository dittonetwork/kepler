syntax = "proto3";

package kepler.workflow;

import "amino/amino.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "kepler/workflow/automation.proto";
import "kepler/workflow/params.proto";

option go_package = "kepler/x/workflow/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/kepler/workflow/params";
  }

  // Queries a list of GetActiveAutomations items.
  rpc GetActiveAutomations(QueryGetActiveAutomationsRequest) returns (QueryGetActiveAutomationsResponse) {
    option (google.api.http).get = "/kepler/workflow/get_active_automations";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

message QueryGetActiveAutomationsRequest {}

message QueryGetActiveAutomationsResponse {
  repeated Automation active_automations = 1;
}
