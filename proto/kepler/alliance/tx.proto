syntax = "proto3";

package kepler.alliance;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "kepler/alliance/params.proto";
import "kepler/alliance/shared_entropy.proto";
import "kepler/alliance/quorum_params.proto";
import "kepler/alliance/alliances_timeline.proto";

option go_package = "kepler/x/alliance/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  
  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams            (MsgUpdateParams           ) returns (MsgUpdateParamsResponse           );
  rpc AddEntropy              (MsgAddEntropy             ) returns (MsgAddEntropyResponse             );
  rpc CreateSharedEntropy     (MsgCreateSharedEntropy    ) returns (MsgCreateSharedEntropyResponse    );
  rpc UpdateSharedEntropy     (MsgUpdateSharedEntropy    ) returns (MsgUpdateSharedEntropyResponse    );
  rpc DeleteSharedEntropy     (MsgDeleteSharedEntropy    ) returns (MsgDeleteSharedEntropyResponse    );
  rpc CreateQuorumParams      (MsgCreateQuorumParams     ) returns (MsgCreateQuorumParamsResponse     );
  rpc UpdateQuorumParams      (MsgUpdateQuorumParams     ) returns (MsgUpdateQuorumParamsResponse     );
  rpc DeleteQuorumParams      (MsgDeleteQuorumParams     ) returns (MsgDeleteQuorumParamsResponse     );
  rpc CreateAlliancesTimeline (MsgCreateAlliancesTimeline) returns (MsgCreateAlliancesTimelineResponse);
  rpc UpdateAlliancesTimeline (MsgUpdateAlliancesTimeline) returns (MsgUpdateAlliancesTimelineResponse);
  rpc DeleteAlliancesTimeline (MsgDeleteAlliancesTimeline) returns (MsgDeleteAlliancesTimelineResponse);
}
// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) =                         "authority";
  option           (amino.name) = "kepler/x/alliance/MsgUpdateParams";
  
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgAddEntropy {
  option (cosmos.msg.v1.signer) = "contributor";
  string contributor = 1;
  uint64 entropy     = 2;
}

message MsgAddEntropyResponse {}

message MsgCreateSharedEntropy {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  uint64 entropy = 3;
}

message MsgCreateSharedEntropyResponse {}

message MsgUpdateSharedEntropy {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  uint64 entropy = 3;
}

message MsgUpdateSharedEntropyResponse {}

message MsgDeleteSharedEntropy {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
}

message MsgDeleteSharedEntropyResponse {}

message MsgCreateQuorumParams {
  option (cosmos.msg.v1.signer) = "creator";
  string creator          = 1;
  uint64 maxParticipants  = 3;
  uint64 thresholdPercent = 4;
  uint64 lifetimeInBlocks = 5;
}

message MsgCreateQuorumParamsResponse {}

message MsgUpdateQuorumParams {
  option (cosmos.msg.v1.signer) = "creator";
  string creator          = 1;
  uint64 maxParticipants  = 3;
  uint64 thresholdPercent = 4;
  uint64 lifetimeInBlocks = 5;
}

message MsgUpdateQuorumParamsResponse {}

message MsgDeleteQuorumParams {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
}

message MsgDeleteQuorumParamsResponse {}

message MsgCreateAlliancesTimeline {
  option (cosmos.msg.v1.signer) = "creator";
           string creator      = 1;
  repeated string participants = 2;
           uint64 startBlock   = 3;
           uint64 endBlock     = 4;
}

message MsgCreateAlliancesTimelineResponse {
  uint64 id = 1;
}

message MsgUpdateAlliancesTimeline {
  option (cosmos.msg.v1.signer) = "creator";
           string creator      = 1;
           uint64 id           = 2;
  repeated string participants = 3;
           uint64 startBlock   = 4;
           uint64 endBlock     = 5;
}

message MsgUpdateAlliancesTimelineResponse {}

message MsgDeleteAlliancesTimeline {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  uint64 id      = 2;
}

message MsgDeleteAlliancesTimelineResponse {}

