name: Build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: read
  checks: write

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Set Environment
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "ENVIRONMENT=test" >> $GITHUB_ENV
          else
            echo "ENVIRONMENT=development" >> $GITHUB_ENV
          fi

  build_artifact:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Golang
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'
          cache: false

      - name: Build Go Application
        run: go build -o main ./cmd/keplerd

      - uses: actions/upload-artifact@master
        with:
          name: main
          path: ./main

  build_image_dev:
    runs-on: ubuntu-latest
    needs: [prepare, build_artifact]
    name: Build
    environment: development
    strategy:
      matrix:
        arch: [amd64]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download golang artifact
        uses: actions/download-artifact@master
        with:
          name: main
          path: .

      - name: Debug Artifact
        run: ls -l ./main

      - name: Set App Name
        run: |
          echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          CI_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          IMAGE_NAME: ${{ vars.ECR_REGISTRY }}:${{ github.ref_name }}_${{ env.SHORT_SHA }}
        run: |
          docker build --build-arg TARGETARCH=${{ matrix.arch }} -f ./${{ matrix.app_path }}/Dockerfile --tag $IMAGE_NAME .
          docker push $IMAGE_NAME