// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: kepler/alliance/quorum_params.proto

package types

import (
	fmt "fmt"
	io "io"
	math "math"
	math_bits "math/bits"

	proto "github.com/cosmos/gogoproto/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type QuorumParams struct {
	MaxParticipants  uint64 `protobuf:"varint,1,opt,name=maxParticipants,proto3" json:"maxParticipants,omitempty"`
	ThresholdPercent uint64 `protobuf:"varint,2,opt,name=thresholdPercent,proto3" json:"thresholdPercent,omitempty"`
	LifetimeInBlocks uint64 `protobuf:"varint,3,opt,name=lifetimeInBlocks,proto3" json:"lifetimeInBlocks,omitempty"`
	Creator          string `protobuf:"bytes,4,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *QuorumParams) Reset()         { *m = QuorumParams{} }
func (m *QuorumParams) String() string { return proto.CompactTextString(m) }
func (*QuorumParams) ProtoMessage()    {}
func (*QuorumParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_85eeb3c4d3410cab, []int{0}
}
func (m *QuorumParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QuorumParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QuorumParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QuorumParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuorumParams.Merge(m, src)
}
func (m *QuorumParams) XXX_Size() int {
	return m.Size()
}
func (m *QuorumParams) XXX_DiscardUnknown() {
	xxx_messageInfo_QuorumParams.DiscardUnknown(m)
}

var xxx_messageInfo_QuorumParams proto.InternalMessageInfo

func (m *QuorumParams) GetMaxParticipants() uint64 {
	if m != nil {
		return m.MaxParticipants
	}
	return 0
}

func (m *QuorumParams) GetThresholdPercent() uint64 {
	if m != nil {
		return m.ThresholdPercent
	}
	return 0
}

func (m *QuorumParams) GetLifetimeInBlocks() uint64 {
	if m != nil {
		return m.LifetimeInBlocks
	}
	return 0
}

func (m *QuorumParams) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func init() {
	proto.RegisterType((*QuorumParams)(nil), "kepler.alliance.QuorumParams")
}

func init() {
	proto.RegisterFile("kepler/alliance/quorum_params.proto", fileDescriptor_85eeb3c4d3410cab)
}

var fileDescriptor_85eeb3c4d3410cab = []byte{
	// 222 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0xce, 0x4e, 0x2d, 0xc8,
	0x49, 0x2d, 0xd2, 0x4f, 0xcc, 0xc9, 0xc9, 0x4c, 0xcc, 0x4b, 0x4e, 0xd5, 0x2f, 0x2c, 0xcd, 0x2f,
	0x2a, 0xcd, 0x8d, 0x2f, 0x48, 0x2c, 0x4a, 0xcc, 0x2d, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0xe2, 0x87, 0x28, 0xd2, 0x83, 0x29, 0x52, 0x5a, 0xc5, 0xc8, 0xc5, 0x13, 0x08, 0x56, 0x18, 0x00,
	0x56, 0x27, 0xa4, 0xc1, 0xc5, 0x9f, 0x9b, 0x58, 0x11, 0x90, 0x58, 0x54, 0x92, 0x99, 0x9c, 0x59,
	0x90, 0x98, 0x57, 0x52, 0x2c, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x12, 0x84, 0x2e, 0x2c, 0xa4, 0xc5,
	0x25, 0x50, 0x92, 0x51, 0x94, 0x5a, 0x9c, 0x91, 0x9f, 0x93, 0x12, 0x90, 0x5a, 0x94, 0x9c, 0x9a,
	0x57, 0x22, 0xc1, 0x04, 0x56, 0x8a, 0x21, 0x0e, 0x52, 0x9b, 0x93, 0x99, 0x96, 0x5a, 0x92, 0x99,
	0x9b, 0xea, 0x99, 0xe7, 0x94, 0x93, 0x9f, 0x9c, 0x5d, 0x2c, 0xc1, 0x0c, 0x51, 0x8b, 0x2e, 0x2e,
	0x24, 0xc1, 0xc5, 0x9e, 0x5c, 0x94, 0x9a, 0x58, 0x92, 0x5f, 0x24, 0xc1, 0xa2, 0xc0, 0xa8, 0xc1,
	0x19, 0x04, 0xe3, 0x3a, 0x19, 0x9e, 0x78, 0x24, 0xc7, 0x78, 0xe1, 0x91, 0x1c, 0xe3, 0x83, 0x47,
	0x72, 0x8c, 0x13, 0x1e, 0xcb, 0x31, 0x5c, 0x78, 0x2c, 0xc7, 0x70, 0xe3, 0xb1, 0x1c, 0x43, 0x94,
	0x38, 0xd4, 0xf3, 0x15, 0x08, 0xef, 0x97, 0x54, 0x16, 0xa4, 0x16, 0x27, 0xb1, 0x81, 0xfd, 0x6d,
	0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xd9, 0x29, 0xdc, 0x7c, 0x1e, 0x01, 0x00, 0x00,
}

func (m *QuorumParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QuorumParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QuorumParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintQuorumParams(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x22
	}
	if m.LifetimeInBlocks != 0 {
		i = encodeVarintQuorumParams(dAtA, i, uint64(m.LifetimeInBlocks))
		i--
		dAtA[i] = 0x18
	}
	if m.ThresholdPercent != 0 {
		i = encodeVarintQuorumParams(dAtA, i, uint64(m.ThresholdPercent))
		i--
		dAtA[i] = 0x10
	}
	if m.MaxParticipants != 0 {
		i = encodeVarintQuorumParams(dAtA, i, uint64(m.MaxParticipants))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintQuorumParams(dAtA []byte, offset int, v uint64) int {
	offset -= sovQuorumParams(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *QuorumParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MaxParticipants != 0 {
		n += 1 + sovQuorumParams(uint64(m.MaxParticipants))
	}
	if m.ThresholdPercent != 0 {
		n += 1 + sovQuorumParams(uint64(m.ThresholdPercent))
	}
	if m.LifetimeInBlocks != 0 {
		n += 1 + sovQuorumParams(uint64(m.LifetimeInBlocks))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovQuorumParams(uint64(l))
	}
	return n
}

func sovQuorumParams(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozQuorumParams(x uint64) (n int) {
	return sovQuorumParams(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *QuorumParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuorumParams
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QuorumParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QuorumParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxParticipants", wireType)
			}
			m.MaxParticipants = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuorumParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxParticipants |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ThresholdPercent", wireType)
			}
			m.ThresholdPercent = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuorumParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ThresholdPercent |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LifetimeInBlocks", wireType)
			}
			m.LifetimeInBlocks = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuorumParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LifetimeInBlocks |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuorumParams
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuorumParams
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuorumParams
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuorumParams(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuorumParams
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipQuorumParams(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowQuorumParams
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuorumParams
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuorumParams
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthQuorumParams
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupQuorumParams
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthQuorumParams
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthQuorumParams        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowQuorumParams          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupQuorumParams = fmt.Errorf("proto: unexpected end of group")
)
