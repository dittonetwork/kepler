// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: kepler/executors/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgAddExecutor defines a transaction to add a new executor.
type MsgAddExecutor struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	// Owner's address (e.g., staker address).
	OwnerAddress string `protobuf:"bytes,2,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
	// Public key of the new executor.
	PublicKey string `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
}

func (m *MsgAddExecutor) Reset()         { *m = MsgAddExecutor{} }
func (m *MsgAddExecutor) String() string { return proto.CompactTextString(m) }
func (*MsgAddExecutor) ProtoMessage()    {}
func (*MsgAddExecutor) Descriptor() ([]byte, []int) {
	return fileDescriptor_bbbd47538c2c4268, []int{0}
}
func (m *MsgAddExecutor) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddExecutor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddExecutor.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddExecutor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddExecutor.Merge(m, src)
}
func (m *MsgAddExecutor) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddExecutor) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddExecutor.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddExecutor proto.InternalMessageInfo

func (m *MsgAddExecutor) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAddExecutor) GetOwnerAddress() string {
	if m != nil {
		return m.OwnerAddress
	}
	return ""
}

func (m *MsgAddExecutor) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

// MsgActivateExecutor defines a transaction to activate an executor.
type MsgActivateExecutor struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *MsgActivateExecutor) Reset()         { *m = MsgActivateExecutor{} }
func (m *MsgActivateExecutor) String() string { return proto.CompactTextString(m) }
func (*MsgActivateExecutor) ProtoMessage()    {}
func (*MsgActivateExecutor) Descriptor() ([]byte, []int) {
	return fileDescriptor_bbbd47538c2c4268, []int{1}
}
func (m *MsgActivateExecutor) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgActivateExecutor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgActivateExecutor.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgActivateExecutor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgActivateExecutor.Merge(m, src)
}
func (m *MsgActivateExecutor) XXX_Size() int {
	return m.Size()
}
func (m *MsgActivateExecutor) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgActivateExecutor.DiscardUnknown(m)
}

var xxx_messageInfo_MsgActivateExecutor proto.InternalMessageInfo

func (m *MsgActivateExecutor) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

// MsgDeactivateExecutor defines a transaction to deactivate an executor.
type MsgDeactivateExecutor struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *MsgDeactivateExecutor) Reset()         { *m = MsgDeactivateExecutor{} }
func (m *MsgDeactivateExecutor) String() string { return proto.CompactTextString(m) }
func (*MsgDeactivateExecutor) ProtoMessage()    {}
func (*MsgDeactivateExecutor) Descriptor() ([]byte, []int) {
	return fileDescriptor_bbbd47538c2c4268, []int{2}
}
func (m *MsgDeactivateExecutor) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeactivateExecutor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeactivateExecutor.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeactivateExecutor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeactivateExecutor.Merge(m, src)
}
func (m *MsgDeactivateExecutor) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeactivateExecutor) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeactivateExecutor.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeactivateExecutor proto.InternalMessageInfo

func (m *MsgDeactivateExecutor) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

// MsgAddExecutorResponse defines the response structure for executing a
// MsgAddExecutor message.
type MsgAddExecutorResponse struct {
	// Executor.
	Executor *Executor `protobuf:"bytes,1,opt,name=executor,proto3" json:"executor,omitempty"`
}

func (m *MsgAddExecutorResponse) Reset()         { *m = MsgAddExecutorResponse{} }
func (m *MsgAddExecutorResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddExecutorResponse) ProtoMessage()    {}
func (*MsgAddExecutorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bbbd47538c2c4268, []int{3}
}
func (m *MsgAddExecutorResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddExecutorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddExecutorResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddExecutorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddExecutorResponse.Merge(m, src)
}
func (m *MsgAddExecutorResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddExecutorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddExecutorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddExecutorResponse proto.InternalMessageInfo

func (m *MsgAddExecutorResponse) GetExecutor() *Executor {
	if m != nil {
		return m.Executor
	}
	return nil
}

// MsgActivateExecutorResponse defines the response structure for executing a
// MsgActivateExecutor message.
type MsgActivateExecutorResponse struct {
}

func (m *MsgActivateExecutorResponse) Reset()         { *m = MsgActivateExecutorResponse{} }
func (m *MsgActivateExecutorResponse) String() string { return proto.CompactTextString(m) }
func (*MsgActivateExecutorResponse) ProtoMessage()    {}
func (*MsgActivateExecutorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bbbd47538c2c4268, []int{4}
}
func (m *MsgActivateExecutorResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgActivateExecutorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgActivateExecutorResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgActivateExecutorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgActivateExecutorResponse.Merge(m, src)
}
func (m *MsgActivateExecutorResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgActivateExecutorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgActivateExecutorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgActivateExecutorResponse proto.InternalMessageInfo

// MsgDeactivateExecutorResponse defines the response structure for executing a
// MsgDeactivateExecutor message.
type MsgDeactivateExecutorResponse struct {
}

func (m *MsgDeactivateExecutorResponse) Reset()         { *m = MsgDeactivateExecutorResponse{} }
func (m *MsgDeactivateExecutorResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeactivateExecutorResponse) ProtoMessage()    {}
func (*MsgDeactivateExecutorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bbbd47538c2c4268, []int{5}
}
func (m *MsgDeactivateExecutorResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeactivateExecutorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeactivateExecutorResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeactivateExecutorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeactivateExecutorResponse.Merge(m, src)
}
func (m *MsgDeactivateExecutorResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeactivateExecutorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeactivateExecutorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeactivateExecutorResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgAddExecutor)(nil), "kepler.executors.MsgAddExecutor")
	proto.RegisterType((*MsgActivateExecutor)(nil), "kepler.executors.MsgActivateExecutor")
	proto.RegisterType((*MsgDeactivateExecutor)(nil), "kepler.executors.MsgDeactivateExecutor")
	proto.RegisterType((*MsgAddExecutorResponse)(nil), "kepler.executors.MsgAddExecutorResponse")
	proto.RegisterType((*MsgActivateExecutorResponse)(nil), "kepler.executors.MsgActivateExecutorResponse")
	proto.RegisterType((*MsgDeactivateExecutorResponse)(nil), "kepler.executors.MsgDeactivateExecutorResponse")
}

func init() { proto.RegisterFile("kepler/executors/tx.proto", fileDescriptor_bbbd47538c2c4268) }

var fileDescriptor_bbbd47538c2c4268 = []byte{
	// 415 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0xcc, 0x4e, 0x2d, 0xc8,
	0x49, 0x2d, 0xd2, 0x4f, 0xad, 0x48, 0x4d, 0x2e, 0x2d, 0xc9, 0x2f, 0x2a, 0xd6, 0x2f, 0xa9, 0xd0,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x80, 0x48, 0xe9, 0xc1, 0xa5, 0xa4, 0x04, 0x13, 0x73,
	0x33, 0xf3, 0xf2, 0xf5, 0xc1, 0x24, 0x44, 0x91, 0x94, 0x78, 0x72, 0x7e, 0x71, 0x6e, 0x7e, 0xb1,
	0x7e, 0x6e, 0x71, 0xba, 0x7e, 0x99, 0x21, 0x88, 0x82, 0x4a, 0x48, 0x42, 0x24, 0xe2, 0xc1, 0x3c,
	0x7d, 0x08, 0x07, 0x2a, 0x25, 0x8f, 0x61, 0x27, 0x8c, 0x05, 0x51, 0xa0, 0x54, 0xc3, 0xc5, 0xe7,
	0x5b, 0x9c, 0xee, 0x98, 0x92, 0xe2, 0x0a, 0x15, 0x17, 0x92, 0xe0, 0x62, 0x4f, 0x2e, 0x4a, 0x4d,
	0x2c, 0xc9, 0x2f, 0x92, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x82, 0x71, 0x85, 0x94, 0xb9, 0x78,
	0xf3, 0xcb, 0xf3, 0x52, 0x8b, 0xe2, 0x13, 0x53, 0x52, 0x8a, 0x52, 0x8b, 0x8b, 0x25, 0x98, 0xc0,
	0xf2, 0x3c, 0x60, 0x41, 0x47, 0x88, 0x98, 0x90, 0x2c, 0x17, 0x57, 0x41, 0x69, 0x52, 0x4e, 0x66,
	0x72, 0x7c, 0x76, 0x6a, 0xa5, 0x04, 0x33, 0x58, 0x05, 0x27, 0x44, 0xc4, 0x3b, 0xb5, 0xd2, 0x8a,
	0xa7, 0xe9, 0xf9, 0x06, 0x2d, 0x98, 0x89, 0x4a, 0xb6, 0x5c, 0xc2, 0x20, 0xdb, 0x93, 0x4b, 0x32,
	0xcb, 0x12, 0x4b, 0x52, 0x09, 0x3b, 0x01, 0x4d, 0xbb, 0x3d, 0x97, 0xa8, 0x6f, 0x71, 0xba, 0x4b,
	0x6a, 0x22, 0xb9, 0x06, 0x04, 0x70, 0x89, 0xa1, 0xfa, 0x3e, 0x28, 0xb5, 0xb8, 0x20, 0x3f, 0xaf,
	0x38, 0x55, 0xc8, 0x8c, 0x8b, 0x03, 0x16, 0x52, 0x60, 0x23, 0xb8, 0x8d, 0xa4, 0xf4, 0xd0, 0x23,
	0x49, 0x0f, 0xae, 0x0b, 0xae, 0x56, 0x49, 0x96, 0x4b, 0x1a, 0x8b, 0x8f, 0x60, 0xc6, 0x2a, 0xc9,
	0x73, 0xc9, 0x62, 0x75, 0x31, 0x4c, 0x81, 0xd1, 0x41, 0x26, 0x2e, 0x66, 0xdf, 0xe2, 0x74, 0xa1,
	0x48, 0x2e, 0x6e, 0xe4, 0x48, 0x51, 0xc0, 0xb4, 0x1c, 0xd5, 0xe1, 0x52, 0x1a, 0x84, 0x54, 0xc0,
	0xbd, 0x96, 0xc1, 0x25, 0x80, 0x11, 0xe2, 0xaa, 0xd8, 0x75, 0xa3, 0x29, 0x93, 0xd2, 0x25, 0x4a,
	0x19, 0xdc, 0xa6, 0x3c, 0x2e, 0x21, 0x2c, 0x91, 0xa3, 0x8e, 0xd5, 0x10, 0x4c, 0x85, 0x52, 0xfa,
	0x44, 0x2a, 0x84, 0xd9, 0x27, 0xc5, 0xda, 0xf0, 0x7c, 0x83, 0x16, 0xa3, 0x93, 0xd7, 0x89, 0x47,
	0x72, 0x8c, 0x17, 0x1e, 0xc9, 0x31, 0x3e, 0x78, 0x24, 0xc7, 0x38, 0xe1, 0xb1, 0x1c, 0xc3, 0x85,
	0xc7, 0x72, 0x0c, 0x37, 0x1e, 0xcb, 0x31, 0x44, 0x19, 0xa4, 0x67, 0x96, 0x64, 0x94, 0x26, 0xe9,
	0x25, 0xe7, 0xe7, 0xea, 0xa7, 0x64, 0x96, 0x94, 0xe4, 0xe7, 0xa5, 0x96, 0x94, 0xe7, 0x17, 0x65,
	0xeb, 0x43, 0xb3, 0x49, 0x05, 0x72, 0xe6, 0xac, 0x2c, 0x48, 0x2d, 0x4e, 0x62, 0x03, 0x67, 0x13,
	0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x37, 0xf6, 0x27, 0x4b, 0xbd, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// AddExecutor defines a transaction to add a new executor.
	AddExecutor(ctx context.Context, in *MsgAddExecutor, opts ...grpc.CallOption) (*MsgAddExecutorResponse, error)
	// ActivateExecutor defines a transaction to activate an executor.
	ActivateExecutor(ctx context.Context, in *MsgActivateExecutor, opts ...grpc.CallOption) (*MsgActivateExecutorResponse, error)
	// DeactivateExecutor defines a transaction to deactivate an executor.
	DeactivateExecutor(ctx context.Context, in *MsgDeactivateExecutor, opts ...grpc.CallOption) (*MsgDeactivateExecutorResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) AddExecutor(ctx context.Context, in *MsgAddExecutor, opts ...grpc.CallOption) (*MsgAddExecutorResponse, error) {
	out := new(MsgAddExecutorResponse)
	err := c.cc.Invoke(ctx, "/kepler.executors.Msg/AddExecutor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ActivateExecutor(ctx context.Context, in *MsgActivateExecutor, opts ...grpc.CallOption) (*MsgActivateExecutorResponse, error) {
	out := new(MsgActivateExecutorResponse)
	err := c.cc.Invoke(ctx, "/kepler.executors.Msg/ActivateExecutor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeactivateExecutor(ctx context.Context, in *MsgDeactivateExecutor, opts ...grpc.CallOption) (*MsgDeactivateExecutorResponse, error) {
	out := new(MsgDeactivateExecutorResponse)
	err := c.cc.Invoke(ctx, "/kepler.executors.Msg/DeactivateExecutor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// AddExecutor defines a transaction to add a new executor.
	AddExecutor(context.Context, *MsgAddExecutor) (*MsgAddExecutorResponse, error)
	// ActivateExecutor defines a transaction to activate an executor.
	ActivateExecutor(context.Context, *MsgActivateExecutor) (*MsgActivateExecutorResponse, error)
	// DeactivateExecutor defines a transaction to deactivate an executor.
	DeactivateExecutor(context.Context, *MsgDeactivateExecutor) (*MsgDeactivateExecutorResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) AddExecutor(ctx context.Context, req *MsgAddExecutor) (*MsgAddExecutorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddExecutor not implemented")
}
func (*UnimplementedMsgServer) ActivateExecutor(ctx context.Context, req *MsgActivateExecutor) (*MsgActivateExecutorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ActivateExecutor not implemented")
}
func (*UnimplementedMsgServer) DeactivateExecutor(ctx context.Context, req *MsgDeactivateExecutor) (*MsgDeactivateExecutorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeactivateExecutor not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_AddExecutor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddExecutor)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddExecutor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kepler.executors.Msg/AddExecutor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddExecutor(ctx, req.(*MsgAddExecutor))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ActivateExecutor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgActivateExecutor)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ActivateExecutor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kepler.executors.Msg/ActivateExecutor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ActivateExecutor(ctx, req.(*MsgActivateExecutor))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeactivateExecutor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeactivateExecutor)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeactivateExecutor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kepler.executors.Msg/DeactivateExecutor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeactivateExecutor(ctx, req.(*MsgDeactivateExecutor))
	}
	return interceptor(ctx, in, info, handler)
}

var Msg_serviceDesc = _Msg_serviceDesc
var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kepler.executors.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddExecutor",
			Handler:    _Msg_AddExecutor_Handler,
		},
		{
			MethodName: "ActivateExecutor",
			Handler:    _Msg_ActivateExecutor_Handler,
		},
		{
			MethodName: "DeactivateExecutor",
			Handler:    _Msg_DeactivateExecutor_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "kepler/executors/tx.proto",
}

func (m *MsgAddExecutor) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddExecutor) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddExecutor) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PublicKey) > 0 {
		i -= len(m.PublicKey)
		copy(dAtA[i:], m.PublicKey)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PublicKey)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.OwnerAddress) > 0 {
		i -= len(m.OwnerAddress)
		copy(dAtA[i:], m.OwnerAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OwnerAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgActivateExecutor) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgActivateExecutor) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgActivateExecutor) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeactivateExecutor) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeactivateExecutor) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeactivateExecutor) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddExecutorResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddExecutorResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddExecutorResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Executor != nil {
		{
			size, err := m.Executor.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgActivateExecutorResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgActivateExecutorResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgActivateExecutorResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeactivateExecutorResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeactivateExecutorResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeactivateExecutorResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgAddExecutor) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OwnerAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PublicKey)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgActivateExecutor) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeactivateExecutor) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAddExecutorResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Executor != nil {
		l = m.Executor.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgActivateExecutorResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeactivateExecutorResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgAddExecutor) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddExecutor: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddExecutor: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OwnerAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OwnerAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PublicKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PublicKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgActivateExecutor) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgActivateExecutor: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgActivateExecutor: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeactivateExecutor) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeactivateExecutor: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeactivateExecutor: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddExecutorResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddExecutorResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddExecutorResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Executor", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Executor == nil {
				m.Executor = &Executor{}
			}
			if err := m.Executor.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgActivateExecutorResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgActivateExecutorResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgActivateExecutorResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeactivateExecutorResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeactivateExecutorResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeactivateExecutorResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
