// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        (unknown)
// source: x/horizon/state/automation.proto

package state

import (
	_ "cosmossdk.io/orm"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Automation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                       uint64   `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Signer                   string   `protobuf:"bytes,3,opt,name=signer,proto3" json:"signer,omitempty"`
	Deleted                  bool     `protobuf:"varint,4,opt,name=deleted,proto3" json:"deleted,omitempty"`
	TargetChainId            string   `protobuf:"bytes,100,opt,name=target_chain_id,json=targetChainId,proto3" json:"target_chain_id,omitempty"`
	MaxGasPrice              string   `protobuf:"bytes,101,opt,name=max_gas_price,json=maxGasPrice,proto3" json:"max_gas_price,omitempty"`
	ActiveFrom               string   `protobuf:"bytes,200,opt,name=active_from,json=activeFrom,proto3" json:"active_from,omitempty"`
	ActiveTo                 string   `protobuf:"bytes,201,opt,name=active_to,json=activeTo,proto3" json:"active_to,omitempty"`
	TriggerExpression        string   `protobuf:"bytes,202,opt,name=trigger_expression,json=triggerExpression,proto3" json:"trigger_expression,omitempty"`
	TriggerExpressionVersion uint32   `protobuf:"varint,203,opt,name=trigger_expression_version,json=triggerExpressionVersion,proto3" json:"trigger_expression_version,omitempty"`
	MaxNumberOfExecutions    uint32   `protobuf:"varint,204,opt,name=max_number_of_executions,json=maxNumberOfExecutions,proto3" json:"max_number_of_executions,omitempty"`
	PreconditionCheckers     []string `protobuf:"bytes,300,rep,name=precondition_checkers,json=preconditionCheckers,proto3" json:"precondition_checkers,omitempty"`
	PreconditionCheckCalls   [][]byte `protobuf:"bytes,301,rep,name=precondition_check_calls,json=preconditionCheckCalls,proto3" json:"precondition_check_calls,omitempty"`
	ActionTargets            []string `protobuf:"bytes,302,rep,name=action_targets,json=actionTargets,proto3" json:"action_targets,omitempty"`
	ActionTargetCalls        [][]byte `protobuf:"bytes,303,rep,name=action_target_calls,json=actionTargetCalls,proto3" json:"action_target_calls,omitempty"`
	// Signature of hash(100-199, hash(200 - 299), 300-399)
	Signature []byte `protobuf:"bytes,400,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *Automation) Reset() {
	*x = Automation{}
	mi := &file_x_horizon_state_automation_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Automation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Automation) ProtoMessage() {}

func (x *Automation) ProtoReflect() protoreflect.Message {
	mi := &file_x_horizon_state_automation_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Automation.ProtoReflect.Descriptor instead.
func (*Automation) Descriptor() ([]byte, []int) {
	return file_x_horizon_state_automation_proto_rawDescGZIP(), []int{0}
}

func (x *Automation) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Automation) GetSigner() string {
	if x != nil {
		return x.Signer
	}
	return ""
}

func (x *Automation) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

func (x *Automation) GetTargetChainId() string {
	if x != nil {
		return x.TargetChainId
	}
	return ""
}

func (x *Automation) GetMaxGasPrice() string {
	if x != nil {
		return x.MaxGasPrice
	}
	return ""
}

func (x *Automation) GetActiveFrom() string {
	if x != nil {
		return x.ActiveFrom
	}
	return ""
}

func (x *Automation) GetActiveTo() string {
	if x != nil {
		return x.ActiveTo
	}
	return ""
}

func (x *Automation) GetTriggerExpression() string {
	if x != nil {
		return x.TriggerExpression
	}
	return ""
}

func (x *Automation) GetTriggerExpressionVersion() uint32 {
	if x != nil {
		return x.TriggerExpressionVersion
	}
	return 0
}

func (x *Automation) GetMaxNumberOfExecutions() uint32 {
	if x != nil {
		return x.MaxNumberOfExecutions
	}
	return 0
}

func (x *Automation) GetPreconditionCheckers() []string {
	if x != nil {
		return x.PreconditionCheckers
	}
	return nil
}

func (x *Automation) GetPreconditionCheckCalls() [][]byte {
	if x != nil {
		return x.PreconditionCheckCalls
	}
	return nil
}

func (x *Automation) GetActionTargets() []string {
	if x != nil {
		return x.ActionTargets
	}
	return nil
}

func (x *Automation) GetActionTargetCalls() [][]byte {
	if x != nil {
		return x.ActionTargetCalls
	}
	return nil
}

func (x *Automation) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

var File_x_horizon_state_automation_proto protoreflect.FileDescriptor

var file_x_horizon_state_automation_proto_rawDesc = []byte{
	0x0a, 0x20, 0x78, 0x2f, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x6f, 0x6e, 0x2f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x2f, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x14, 0x6b, 0x65, 0x70, 0x6c, 0x65, 0x72, 0x2e, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x6f, 0x6e, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x1a, 0x17, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73,
	0x2f, 0x6f, 0x72, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xac, 0x05, 0x0a, 0x0a, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x61,
	0x78, 0x5f, 0x67, 0x61, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x47, 0x61, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0xc8, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0xc9, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x54, 0x6f, 0x12, 0x2e,
	0x0a, 0x12, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0xca, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x74, 0x72, 0x69,
	0x67, 0x67, 0x65, 0x72, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3d,
	0x0a, 0x1a, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0xcb, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x18, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x45, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a,
	0x18, 0x6d, 0x61, 0x78, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xcc, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x15, 0x6d, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x34, 0x0a, 0x15, 0x70, 0x72, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x73,
	0x18, 0xac, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x14, 0x70, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x12, 0x39, 0x0a,
	0x18, 0x70, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x18, 0xad, 0x02, 0x20, 0x03, 0x28, 0x0c,
	0x52, 0x16, 0x70, 0x72, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x43, 0x61, 0x6c, 0x6c, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0xae, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73,
	0x12, 0x2f, 0x0a, 0x13, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x18, 0xaf, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x11,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x6c,
	0x73, 0x12, 0x1d, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x90,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x3a, 0x3e, 0xf2, 0x9e, 0xd3, 0x8e, 0x03, 0x38, 0x0a, 0x06, 0x0a, 0x02, 0x69, 0x64, 0x10, 0x01,
	0x12, 0x0a, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x10, 0x03, 0x18, 0x01,
	0x42, 0x18, 0x5a, 0x16, 0x6b, 0x65, 0x70, 0x6c, 0x65, 0x72, 0x2f, 0x78, 0x2f, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x6f, 0x6e, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_x_horizon_state_automation_proto_rawDescOnce sync.Once
	file_x_horizon_state_automation_proto_rawDescData = file_x_horizon_state_automation_proto_rawDesc
)

func file_x_horizon_state_automation_proto_rawDescGZIP() []byte {
	file_x_horizon_state_automation_proto_rawDescOnce.Do(func() {
		file_x_horizon_state_automation_proto_rawDescData = protoimpl.X.CompressGZIP(file_x_horizon_state_automation_proto_rawDescData)
	})
	return file_x_horizon_state_automation_proto_rawDescData
}

var file_x_horizon_state_automation_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_x_horizon_state_automation_proto_goTypes = []any{
	(*Automation)(nil), // 0: kepler.horizon.state.Automation
}
var file_x_horizon_state_automation_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_x_horizon_state_automation_proto_init() }
func file_x_horizon_state_automation_proto_init() {
	if File_x_horizon_state_automation_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_x_horizon_state_automation_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_x_horizon_state_automation_proto_goTypes,
		DependencyIndexes: file_x_horizon_state_automation_proto_depIdxs,
		MessageInfos:      file_x_horizon_state_automation_proto_msgTypes,
	}.Build()
	File_x_horizon_state_automation_proto = out.File
	file_x_horizon_state_automation_proto_rawDesc = nil
	file_x_horizon_state_automation_proto_goTypes = nil
	file_x_horizon_state_automation_proto_depIdxs = nil
}
