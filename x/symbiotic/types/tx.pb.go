// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: kepler/symbiotic/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgUpdateParams is the Msg/UpdateParams request type.
type MsgUpdateParams struct {
	// authority is the address that controls the module (defaults to x/gov unless overwritten).
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// NOTE: All parameters must be supplied.
	Params Params `protobuf:"bytes,2,opt,name=params,proto3" json:"params"`
}

func (m *MsgUpdateParams) Reset()         { *m = MsgUpdateParams{} }
func (m *MsgUpdateParams) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParams) ProtoMessage()    {}
func (*MsgUpdateParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_518967d6e6a10349, []int{0}
}
func (m *MsgUpdateParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParams.Merge(m, src)
}
func (m *MsgUpdateParams) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParams) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParams.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParams proto.InternalMessageInfo

func (m *MsgUpdateParams) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgUpdateParams) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
type MsgUpdateParamsResponse struct {
}

func (m *MsgUpdateParamsResponse) Reset()         { *m = MsgUpdateParamsResponse{} }
func (m *MsgUpdateParamsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParamsResponse) ProtoMessage()    {}
func (*MsgUpdateParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_518967d6e6a10349, []int{1}
}
func (m *MsgUpdateParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParamsResponse.Merge(m, src)
}
func (m *MsgUpdateParamsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParamsResponse proto.InternalMessageInfo

type MsgCreateStakedAmountInfo struct {
	Creator         string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	EthereumAddress string `protobuf:"bytes,2,opt,name=ethereumAddress,proto3" json:"ethereumAddress,omitempty"`
	StakedAmount    string `protobuf:"bytes,3,opt,name=stakedAmount,proto3" json:"stakedAmount,omitempty"`
	LastUpdateTs    uint64 `protobuf:"varint,4,opt,name=lastUpdateTs,proto3" json:"lastUpdateTs,omitempty"`
}

func (m *MsgCreateStakedAmountInfo) Reset()         { *m = MsgCreateStakedAmountInfo{} }
func (m *MsgCreateStakedAmountInfo) String() string { return proto.CompactTextString(m) }
func (*MsgCreateStakedAmountInfo) ProtoMessage()    {}
func (*MsgCreateStakedAmountInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_518967d6e6a10349, []int{2}
}
func (m *MsgCreateStakedAmountInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateStakedAmountInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateStakedAmountInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateStakedAmountInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateStakedAmountInfo.Merge(m, src)
}
func (m *MsgCreateStakedAmountInfo) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateStakedAmountInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateStakedAmountInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateStakedAmountInfo proto.InternalMessageInfo

func (m *MsgCreateStakedAmountInfo) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateStakedAmountInfo) GetEthereumAddress() string {
	if m != nil {
		return m.EthereumAddress
	}
	return ""
}

func (m *MsgCreateStakedAmountInfo) GetStakedAmount() string {
	if m != nil {
		return m.StakedAmount
	}
	return ""
}

func (m *MsgCreateStakedAmountInfo) GetLastUpdateTs() uint64 {
	if m != nil {
		return m.LastUpdateTs
	}
	return 0
}

type MsgCreateStakedAmountInfoResponse struct {
}

func (m *MsgCreateStakedAmountInfoResponse) Reset()         { *m = MsgCreateStakedAmountInfoResponse{} }
func (m *MsgCreateStakedAmountInfoResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateStakedAmountInfoResponse) ProtoMessage()    {}
func (*MsgCreateStakedAmountInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_518967d6e6a10349, []int{3}
}
func (m *MsgCreateStakedAmountInfoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateStakedAmountInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateStakedAmountInfoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateStakedAmountInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateStakedAmountInfoResponse.Merge(m, src)
}
func (m *MsgCreateStakedAmountInfoResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateStakedAmountInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateStakedAmountInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateStakedAmountInfoResponse proto.InternalMessageInfo

type MsgUpdateStakedAmountInfo struct {
	Creator         string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	EthereumAddress string `protobuf:"bytes,2,opt,name=ethereumAddress,proto3" json:"ethereumAddress,omitempty"`
	StakedAmount    string `protobuf:"bytes,3,opt,name=stakedAmount,proto3" json:"stakedAmount,omitempty"`
	LastUpdateTs    uint64 `protobuf:"varint,4,opt,name=lastUpdateTs,proto3" json:"lastUpdateTs,omitempty"`
}

func (m *MsgUpdateStakedAmountInfo) Reset()         { *m = MsgUpdateStakedAmountInfo{} }
func (m *MsgUpdateStakedAmountInfo) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateStakedAmountInfo) ProtoMessage()    {}
func (*MsgUpdateStakedAmountInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_518967d6e6a10349, []int{4}
}
func (m *MsgUpdateStakedAmountInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateStakedAmountInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateStakedAmountInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateStakedAmountInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateStakedAmountInfo.Merge(m, src)
}
func (m *MsgUpdateStakedAmountInfo) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateStakedAmountInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateStakedAmountInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateStakedAmountInfo proto.InternalMessageInfo

func (m *MsgUpdateStakedAmountInfo) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateStakedAmountInfo) GetEthereumAddress() string {
	if m != nil {
		return m.EthereumAddress
	}
	return ""
}

func (m *MsgUpdateStakedAmountInfo) GetStakedAmount() string {
	if m != nil {
		return m.StakedAmount
	}
	return ""
}

func (m *MsgUpdateStakedAmountInfo) GetLastUpdateTs() uint64 {
	if m != nil {
		return m.LastUpdateTs
	}
	return 0
}

type MsgUpdateStakedAmountInfoResponse struct {
}

func (m *MsgUpdateStakedAmountInfoResponse) Reset()         { *m = MsgUpdateStakedAmountInfoResponse{} }
func (m *MsgUpdateStakedAmountInfoResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateStakedAmountInfoResponse) ProtoMessage()    {}
func (*MsgUpdateStakedAmountInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_518967d6e6a10349, []int{5}
}
func (m *MsgUpdateStakedAmountInfoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateStakedAmountInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateStakedAmountInfoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateStakedAmountInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateStakedAmountInfoResponse.Merge(m, src)
}
func (m *MsgUpdateStakedAmountInfoResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateStakedAmountInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateStakedAmountInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateStakedAmountInfoResponse proto.InternalMessageInfo

type MsgDeleteStakedAmountInfo struct {
	Creator         string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	EthereumAddress string `protobuf:"bytes,2,opt,name=ethereumAddress,proto3" json:"ethereumAddress,omitempty"`
}

func (m *MsgDeleteStakedAmountInfo) Reset()         { *m = MsgDeleteStakedAmountInfo{} }
func (m *MsgDeleteStakedAmountInfo) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteStakedAmountInfo) ProtoMessage()    {}
func (*MsgDeleteStakedAmountInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_518967d6e6a10349, []int{6}
}
func (m *MsgDeleteStakedAmountInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteStakedAmountInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteStakedAmountInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteStakedAmountInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteStakedAmountInfo.Merge(m, src)
}
func (m *MsgDeleteStakedAmountInfo) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteStakedAmountInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteStakedAmountInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteStakedAmountInfo proto.InternalMessageInfo

func (m *MsgDeleteStakedAmountInfo) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteStakedAmountInfo) GetEthereumAddress() string {
	if m != nil {
		return m.EthereumAddress
	}
	return ""
}

type MsgDeleteStakedAmountInfoResponse struct {
}

func (m *MsgDeleteStakedAmountInfoResponse) Reset()         { *m = MsgDeleteStakedAmountInfoResponse{} }
func (m *MsgDeleteStakedAmountInfoResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteStakedAmountInfoResponse) ProtoMessage()    {}
func (*MsgDeleteStakedAmountInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_518967d6e6a10349, []int{7}
}
func (m *MsgDeleteStakedAmountInfoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteStakedAmountInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteStakedAmountInfoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteStakedAmountInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteStakedAmountInfoResponse.Merge(m, src)
}
func (m *MsgDeleteStakedAmountInfoResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteStakedAmountInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteStakedAmountInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteStakedAmountInfoResponse proto.InternalMessageInfo

type MsgCreateContractAddress struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *MsgCreateContractAddress) Reset()         { *m = MsgCreateContractAddress{} }
func (m *MsgCreateContractAddress) String() string { return proto.CompactTextString(m) }
func (*MsgCreateContractAddress) ProtoMessage()    {}
func (*MsgCreateContractAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_518967d6e6a10349, []int{8}
}
func (m *MsgCreateContractAddress) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateContractAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateContractAddress.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateContractAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateContractAddress.Merge(m, src)
}
func (m *MsgCreateContractAddress) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateContractAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateContractAddress.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateContractAddress proto.InternalMessageInfo

func (m *MsgCreateContractAddress) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateContractAddress) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type MsgCreateContractAddressResponse struct {
}

func (m *MsgCreateContractAddressResponse) Reset()         { *m = MsgCreateContractAddressResponse{} }
func (m *MsgCreateContractAddressResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateContractAddressResponse) ProtoMessage()    {}
func (*MsgCreateContractAddressResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_518967d6e6a10349, []int{9}
}
func (m *MsgCreateContractAddressResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateContractAddressResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateContractAddressResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateContractAddressResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateContractAddressResponse.Merge(m, src)
}
func (m *MsgCreateContractAddressResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateContractAddressResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateContractAddressResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateContractAddressResponse proto.InternalMessageInfo

type MsgUpdateContractAddress struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *MsgUpdateContractAddress) Reset()         { *m = MsgUpdateContractAddress{} }
func (m *MsgUpdateContractAddress) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateContractAddress) ProtoMessage()    {}
func (*MsgUpdateContractAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_518967d6e6a10349, []int{10}
}
func (m *MsgUpdateContractAddress) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateContractAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateContractAddress.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateContractAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateContractAddress.Merge(m, src)
}
func (m *MsgUpdateContractAddress) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateContractAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateContractAddress.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateContractAddress proto.InternalMessageInfo

func (m *MsgUpdateContractAddress) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateContractAddress) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type MsgUpdateContractAddressResponse struct {
}

func (m *MsgUpdateContractAddressResponse) Reset()         { *m = MsgUpdateContractAddressResponse{} }
func (m *MsgUpdateContractAddressResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateContractAddressResponse) ProtoMessage()    {}
func (*MsgUpdateContractAddressResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_518967d6e6a10349, []int{11}
}
func (m *MsgUpdateContractAddressResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateContractAddressResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateContractAddressResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateContractAddressResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateContractAddressResponse.Merge(m, src)
}
func (m *MsgUpdateContractAddressResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateContractAddressResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateContractAddressResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateContractAddressResponse proto.InternalMessageInfo

type MsgDeleteContractAddress struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *MsgDeleteContractAddress) Reset()         { *m = MsgDeleteContractAddress{} }
func (m *MsgDeleteContractAddress) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteContractAddress) ProtoMessage()    {}
func (*MsgDeleteContractAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_518967d6e6a10349, []int{12}
}
func (m *MsgDeleteContractAddress) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteContractAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteContractAddress.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteContractAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteContractAddress.Merge(m, src)
}
func (m *MsgDeleteContractAddress) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteContractAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteContractAddress.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteContractAddress proto.InternalMessageInfo

func (m *MsgDeleteContractAddress) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type MsgDeleteContractAddressResponse struct {
}

func (m *MsgDeleteContractAddressResponse) Reset()         { *m = MsgDeleteContractAddressResponse{} }
func (m *MsgDeleteContractAddressResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteContractAddressResponse) ProtoMessage()    {}
func (*MsgDeleteContractAddressResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_518967d6e6a10349, []int{13}
}
func (m *MsgDeleteContractAddressResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteContractAddressResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteContractAddressResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteContractAddressResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteContractAddressResponse.Merge(m, src)
}
func (m *MsgDeleteContractAddressResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteContractAddressResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteContractAddressResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteContractAddressResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgUpdateParams)(nil), "kepler.symbiotic.MsgUpdateParams")
	proto.RegisterType((*MsgUpdateParamsResponse)(nil), "kepler.symbiotic.MsgUpdateParamsResponse")
	proto.RegisterType((*MsgCreateStakedAmountInfo)(nil), "kepler.symbiotic.MsgCreateStakedAmountInfo")
	proto.RegisterType((*MsgCreateStakedAmountInfoResponse)(nil), "kepler.symbiotic.MsgCreateStakedAmountInfoResponse")
	proto.RegisterType((*MsgUpdateStakedAmountInfo)(nil), "kepler.symbiotic.MsgUpdateStakedAmountInfo")
	proto.RegisterType((*MsgUpdateStakedAmountInfoResponse)(nil), "kepler.symbiotic.MsgUpdateStakedAmountInfoResponse")
	proto.RegisterType((*MsgDeleteStakedAmountInfo)(nil), "kepler.symbiotic.MsgDeleteStakedAmountInfo")
	proto.RegisterType((*MsgDeleteStakedAmountInfoResponse)(nil), "kepler.symbiotic.MsgDeleteStakedAmountInfoResponse")
	proto.RegisterType((*MsgCreateContractAddress)(nil), "kepler.symbiotic.MsgCreateContractAddress")
	proto.RegisterType((*MsgCreateContractAddressResponse)(nil), "kepler.symbiotic.MsgCreateContractAddressResponse")
	proto.RegisterType((*MsgUpdateContractAddress)(nil), "kepler.symbiotic.MsgUpdateContractAddress")
	proto.RegisterType((*MsgUpdateContractAddressResponse)(nil), "kepler.symbiotic.MsgUpdateContractAddressResponse")
	proto.RegisterType((*MsgDeleteContractAddress)(nil), "kepler.symbiotic.MsgDeleteContractAddress")
	proto.RegisterType((*MsgDeleteContractAddressResponse)(nil), "kepler.symbiotic.MsgDeleteContractAddressResponse")
}

func init() { proto.RegisterFile("kepler/symbiotic/tx.proto", fileDescriptor_518967d6e6a10349) }

var fileDescriptor_518967d6e6a10349 = []byte{
	// 632 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x56, 0x31, 0x6f, 0xd3, 0x40,
	0x18, 0x8d, 0x69, 0x69, 0x95, 0x23, 0x52, 0xc1, 0x2a, 0xd4, 0xb1, 0x84, 0x49, 0xcd, 0x40, 0xea,
	0x8a, 0x58, 0xa4, 0x82, 0xa1, 0x4c, 0x4d, 0x59, 0x18, 0x22, 0x21, 0x17, 0x16, 0x54, 0x29, 0xba,
	0x26, 0x57, 0xd7, 0x6a, 0xec, 0xb3, 0x7c, 0x17, 0x68, 0x98, 0x10, 0x23, 0x13, 0x3f, 0x83, 0x31,
	0x03, 0x8c, 0xec, 0x65, 0xab, 0x98, 0x98, 0x10, 0x4a, 0x86, 0xfc, 0x0d, 0xe4, 0xbb, 0x73, 0x9a,
	0x38, 0x67, 0x13, 0x86, 0x0e, 0x2c, 0x6d, 0xee, 0xfb, 0x9e, 0xbf, 0xf7, 0xde, 0x17, 0xbd, 0x73,
	0x40, 0xf9, 0x14, 0x85, 0x5d, 0x14, 0xd9, 0xa4, 0xef, 0x1f, 0x79, 0x98, 0x7a, 0x6d, 0x9b, 0x9e,
	0xd5, 0xc2, 0x08, 0x53, 0xac, 0xde, 0xe4, 0xad, 0xda, 0xa4, 0xa5, 0xdf, 0x82, 0xbe, 0x17, 0x60,
	0x9b, 0xfd, 0xe5, 0x20, 0x7d, 0xa3, 0x8d, 0x89, 0x8f, 0x89, 0xed, 0x13, 0xd7, 0x7e, 0xf3, 0x28,
	0xfe, 0x27, 0x1a, 0x65, 0xde, 0x68, 0xb1, 0x93, 0xcd, 0x0f, 0xa2, 0xb5, 0xee, 0x62, 0x17, 0xf3,
	0x7a, 0xfc, 0x49, 0x54, 0xef, 0xce, 0x29, 0x09, 0x61, 0x04, 0xfd, 0xe4, 0xa1, 0xad, 0xb9, 0x36,
	0xa1, 0xf0, 0x14, 0x75, 0x5a, 0xd0, 0xc7, 0xbd, 0x80, 0xb6, 0xbc, 0xe0, 0x38, 0x99, 0xf4, 0x60,
	0x0e, 0xda, 0xc6, 0x01, 0x8d, 0x60, 0x9b, 0xb6, 0x60, 0xa7, 0x13, 0x21, 0x22, 0x66, 0x9a, 0xdf,
	0x14, 0xb0, 0xd6, 0x24, 0xee, 0xab, 0xb0, 0x03, 0x29, 0x7a, 0xc1, 0xd8, 0xd4, 0x27, 0xa0, 0x08,
	0x7b, 0xf4, 0x04, 0x47, 0x1e, 0xed, 0x6b, 0x4a, 0x45, 0xa9, 0x16, 0x1b, 0xda, 0x8f, 0x2f, 0x0f,
	0xd7, 0x85, 0x83, 0x3d, 0x3e, 0xe0, 0x80, 0x46, 0x5e, 0xe0, 0x3a, 0x97, 0x50, 0xf5, 0x29, 0x58,
	0xe1, 0x7a, 0xb5, 0x6b, 0x15, 0xa5, 0x7a, 0xa3, 0xae, 0xd5, 0xd2, 0xeb, 0xab, 0x71, 0x86, 0x46,
	0xf1, 0xfc, 0xd7, 0xbd, 0xc2, 0xe7, 0xf1, 0xc0, 0x52, 0x1c, 0xf1, 0xc8, 0xee, 0xe3, 0x0f, 0xe3,
	0x81, 0x75, 0x39, 0xec, 0xe3, 0x78, 0x60, 0x99, 0xc2, 0xc4, 0xd9, 0x94, 0x8d, 0x94, 0x56, 0xb3,
	0x0c, 0x36, 0x52, 0x25, 0x07, 0x91, 0x10, 0x07, 0x04, 0x99, 0x5f, 0x15, 0x50, 0x6e, 0x12, 0x77,
	0x3f, 0x42, 0x90, 0xa2, 0x03, 0xb6, 0xa9, 0x3d, 0xb6, 0xa8, 0xe7, 0xc1, 0x31, 0x56, 0x35, 0xb0,
	0xda, 0x8e, 0x3b, 0x38, 0xe2, 0x16, 0x9d, 0xe4, 0xa8, 0x56, 0xc1, 0x1a, 0xa2, 0x27, 0x28, 0x42,
	0x3d, 0x5f, 0x58, 0x65, 0x7e, 0x8a, 0x4e, 0xba, 0xac, 0x9a, 0xa0, 0x44, 0xa6, 0xe6, 0x6a, 0x4b,
	0x0c, 0x36, 0x53, 0x8b, 0x31, 0x5d, 0x48, 0x28, 0x57, 0xf8, 0x92, 0x68, 0xcb, 0x15, 0xa5, 0xba,
	0xec, 0xcc, 0xd4, 0x76, 0x4b, 0xb1, 0xf7, 0x84, 0xdf, 0xbc, 0x0f, 0x36, 0x33, 0x65, 0xa7, 0xcd,
	0xf1, 0x11, 0xff, 0x9d, 0x39, 0xb9, 0xec, 0x89, 0x39, 0x9f, 0x79, 0x7b, 0x86, 0xba, 0xe8, 0x6a,
	0xbc, 0x49, 0x35, 0xc9, 0xe9, 0x26, 0x9a, 0x0e, 0x81, 0x36, 0xf9, 0x56, 0xf6, 0x45, 0x96, 0x92,
	0x55, 0x65, 0x4b, 0xd2, 0xc0, 0xaa, 0xc8, 0x9b, 0xd8, 0x5f, 0x72, 0x4c, 0x49, 0x30, 0x41, 0x25,
	0x6b, 0x7a, 0x4a, 0x01, 0x5f, 0xdd, 0x55, 0x29, 0x90, 0x4e, 0x9f, 0x28, 0x68, 0x30, 0x05, 0x7c,
	0x51, 0x0b, 0x2b, 0x90, 0xf2, 0x48, 0x67, 0x24, 0x3c, 0xf5, 0xef, 0x2b, 0x60, 0xa9, 0x49, 0x5c,
	0xf5, 0x10, 0x94, 0x66, 0x2e, 0xa6, 0xcd, 0xf9, 0x0b, 0x25, 0x15, 0x7e, 0x7d, 0xeb, 0xaf, 0x90,
	0x84, 0x45, 0x7d, 0x07, 0xee, 0x64, 0xdc, 0x0d, 0xdb, 0xd2, 0x21, 0x72, 0xb0, 0xbe, 0xf3, 0x0f,
	0xe0, 0x69, 0xee, 0x8c, 0xe8, 0x6e, 0xe7, 0x18, 0x58, 0x90, 0x3b, 0x3f, 0x5d, 0x31, 0x77, 0x46,
	0xb4, 0xe4, 0xdc, 0x72, 0x70, 0x06, 0x77, 0x7e, 0x8a, 0xd4, 0xb7, 0xe0, 0xb6, 0x3c, 0x42, 0x56,
	0xce, 0x16, 0x53, 0x58, 0xbd, 0xbe, 0x38, 0x76, 0x9a, 0x58, 0x9e, 0x1c, 0x2b, 0x67, 0x85, 0x8b,
	0x11, 0xe7, 0x66, 0x26, 0x26, 0x96, 0x07, 0xc6, 0xca, 0xd9, 0xdf, 0x62, 0xc4, 0xb9, 0x21, 0xd2,
	0xaf, 0xbf, 0x8f, 0xdf, 0xaf, 0x8d, 0xfa, 0xf9, 0xd0, 0x50, 0x2e, 0x86, 0x86, 0xf2, 0x7b, 0x68,
	0x28, 0x9f, 0x46, 0x46, 0xe1, 0x62, 0x64, 0x14, 0x7e, 0x8e, 0x8c, 0xc2, 0x6b, 0x4d, 0xf2, 0x7a,
	0xa5, 0xfd, 0x10, 0x91, 0xa3, 0x15, 0xf6, 0xdb, 0x60, 0xe7, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x3e, 0x25, 0x88, 0x7d, 0x1a, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// UpdateParams defines a (governance) operation for updating the module
	// parameters. The authority defaults to the x/gov module account.
	UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error)
	CreateStakedAmountInfo(ctx context.Context, in *MsgCreateStakedAmountInfo, opts ...grpc.CallOption) (*MsgCreateStakedAmountInfoResponse, error)
	UpdateStakedAmountInfo(ctx context.Context, in *MsgUpdateStakedAmountInfo, opts ...grpc.CallOption) (*MsgUpdateStakedAmountInfoResponse, error)
	DeleteStakedAmountInfo(ctx context.Context, in *MsgDeleteStakedAmountInfo, opts ...grpc.CallOption) (*MsgDeleteStakedAmountInfoResponse, error)
	CreateContractAddress(ctx context.Context, in *MsgCreateContractAddress, opts ...grpc.CallOption) (*MsgCreateContractAddressResponse, error)
	UpdateContractAddress(ctx context.Context, in *MsgUpdateContractAddress, opts ...grpc.CallOption) (*MsgUpdateContractAddressResponse, error)
	DeleteContractAddress(ctx context.Context, in *MsgDeleteContractAddress, opts ...grpc.CallOption) (*MsgDeleteContractAddressResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error) {
	out := new(MsgUpdateParamsResponse)
	err := c.cc.Invoke(ctx, "/kepler.symbiotic.Msg/UpdateParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateStakedAmountInfo(ctx context.Context, in *MsgCreateStakedAmountInfo, opts ...grpc.CallOption) (*MsgCreateStakedAmountInfoResponse, error) {
	out := new(MsgCreateStakedAmountInfoResponse)
	err := c.cc.Invoke(ctx, "/kepler.symbiotic.Msg/CreateStakedAmountInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateStakedAmountInfo(ctx context.Context, in *MsgUpdateStakedAmountInfo, opts ...grpc.CallOption) (*MsgUpdateStakedAmountInfoResponse, error) {
	out := new(MsgUpdateStakedAmountInfoResponse)
	err := c.cc.Invoke(ctx, "/kepler.symbiotic.Msg/UpdateStakedAmountInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteStakedAmountInfo(ctx context.Context, in *MsgDeleteStakedAmountInfo, opts ...grpc.CallOption) (*MsgDeleteStakedAmountInfoResponse, error) {
	out := new(MsgDeleteStakedAmountInfoResponse)
	err := c.cc.Invoke(ctx, "/kepler.symbiotic.Msg/DeleteStakedAmountInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateContractAddress(ctx context.Context, in *MsgCreateContractAddress, opts ...grpc.CallOption) (*MsgCreateContractAddressResponse, error) {
	out := new(MsgCreateContractAddressResponse)
	err := c.cc.Invoke(ctx, "/kepler.symbiotic.Msg/CreateContractAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateContractAddress(ctx context.Context, in *MsgUpdateContractAddress, opts ...grpc.CallOption) (*MsgUpdateContractAddressResponse, error) {
	out := new(MsgUpdateContractAddressResponse)
	err := c.cc.Invoke(ctx, "/kepler.symbiotic.Msg/UpdateContractAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteContractAddress(ctx context.Context, in *MsgDeleteContractAddress, opts ...grpc.CallOption) (*MsgDeleteContractAddressResponse, error) {
	out := new(MsgDeleteContractAddressResponse)
	err := c.cc.Invoke(ctx, "/kepler.symbiotic.Msg/DeleteContractAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// UpdateParams defines a (governance) operation for updating the module
	// parameters. The authority defaults to the x/gov module account.
	UpdateParams(context.Context, *MsgUpdateParams) (*MsgUpdateParamsResponse, error)
	CreateStakedAmountInfo(context.Context, *MsgCreateStakedAmountInfo) (*MsgCreateStakedAmountInfoResponse, error)
	UpdateStakedAmountInfo(context.Context, *MsgUpdateStakedAmountInfo) (*MsgUpdateStakedAmountInfoResponse, error)
	DeleteStakedAmountInfo(context.Context, *MsgDeleteStakedAmountInfo) (*MsgDeleteStakedAmountInfoResponse, error)
	CreateContractAddress(context.Context, *MsgCreateContractAddress) (*MsgCreateContractAddressResponse, error)
	UpdateContractAddress(context.Context, *MsgUpdateContractAddress) (*MsgUpdateContractAddressResponse, error)
	DeleteContractAddress(context.Context, *MsgDeleteContractAddress) (*MsgDeleteContractAddressResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) UpdateParams(ctx context.Context, req *MsgUpdateParams) (*MsgUpdateParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateParams not implemented")
}
func (*UnimplementedMsgServer) CreateStakedAmountInfo(ctx context.Context, req *MsgCreateStakedAmountInfo) (*MsgCreateStakedAmountInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateStakedAmountInfo not implemented")
}
func (*UnimplementedMsgServer) UpdateStakedAmountInfo(ctx context.Context, req *MsgUpdateStakedAmountInfo) (*MsgUpdateStakedAmountInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateStakedAmountInfo not implemented")
}
func (*UnimplementedMsgServer) DeleteStakedAmountInfo(ctx context.Context, req *MsgDeleteStakedAmountInfo) (*MsgDeleteStakedAmountInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteStakedAmountInfo not implemented")
}
func (*UnimplementedMsgServer) CreateContractAddress(ctx context.Context, req *MsgCreateContractAddress) (*MsgCreateContractAddressResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateContractAddress not implemented")
}
func (*UnimplementedMsgServer) UpdateContractAddress(ctx context.Context, req *MsgUpdateContractAddress) (*MsgUpdateContractAddressResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateContractAddress not implemented")
}
func (*UnimplementedMsgServer) DeleteContractAddress(ctx context.Context, req *MsgDeleteContractAddress) (*MsgDeleteContractAddressResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteContractAddress not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_UpdateParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kepler.symbiotic.Msg/UpdateParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateParams(ctx, req.(*MsgUpdateParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateStakedAmountInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateStakedAmountInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateStakedAmountInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kepler.symbiotic.Msg/CreateStakedAmountInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateStakedAmountInfo(ctx, req.(*MsgCreateStakedAmountInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateStakedAmountInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateStakedAmountInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateStakedAmountInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kepler.symbiotic.Msg/UpdateStakedAmountInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateStakedAmountInfo(ctx, req.(*MsgUpdateStakedAmountInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteStakedAmountInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteStakedAmountInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteStakedAmountInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kepler.symbiotic.Msg/DeleteStakedAmountInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteStakedAmountInfo(ctx, req.(*MsgDeleteStakedAmountInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateContractAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateContractAddress)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateContractAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kepler.symbiotic.Msg/CreateContractAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateContractAddress(ctx, req.(*MsgCreateContractAddress))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateContractAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateContractAddress)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateContractAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kepler.symbiotic.Msg/UpdateContractAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateContractAddress(ctx, req.(*MsgUpdateContractAddress))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteContractAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteContractAddress)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteContractAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kepler.symbiotic.Msg/DeleteContractAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteContractAddress(ctx, req.(*MsgDeleteContractAddress))
	}
	return interceptor(ctx, in, info, handler)
}

var Msg_serviceDesc = _Msg_serviceDesc
var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kepler.symbiotic.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateParams",
			Handler:    _Msg_UpdateParams_Handler,
		},
		{
			MethodName: "CreateStakedAmountInfo",
			Handler:    _Msg_CreateStakedAmountInfo_Handler,
		},
		{
			MethodName: "UpdateStakedAmountInfo",
			Handler:    _Msg_UpdateStakedAmountInfo_Handler,
		},
		{
			MethodName: "DeleteStakedAmountInfo",
			Handler:    _Msg_DeleteStakedAmountInfo_Handler,
		},
		{
			MethodName: "CreateContractAddress",
			Handler:    _Msg_CreateContractAddress_Handler,
		},
		{
			MethodName: "UpdateContractAddress",
			Handler:    _Msg_UpdateContractAddress_Handler,
		},
		{
			MethodName: "DeleteContractAddress",
			Handler:    _Msg_DeleteContractAddress_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "kepler/symbiotic/tx.proto",
}

func (m *MsgUpdateParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateStakedAmountInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateStakedAmountInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateStakedAmountInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.LastUpdateTs != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.LastUpdateTs))
		i--
		dAtA[i] = 0x20
	}
	if len(m.StakedAmount) > 0 {
		i -= len(m.StakedAmount)
		copy(dAtA[i:], m.StakedAmount)
		i = encodeVarintTx(dAtA, i, uint64(len(m.StakedAmount)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.EthereumAddress) > 0 {
		i -= len(m.EthereumAddress)
		copy(dAtA[i:], m.EthereumAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.EthereumAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateStakedAmountInfoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateStakedAmountInfoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateStakedAmountInfoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateStakedAmountInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateStakedAmountInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateStakedAmountInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.LastUpdateTs != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.LastUpdateTs))
		i--
		dAtA[i] = 0x20
	}
	if len(m.StakedAmount) > 0 {
		i -= len(m.StakedAmount)
		copy(dAtA[i:], m.StakedAmount)
		i = encodeVarintTx(dAtA, i, uint64(len(m.StakedAmount)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.EthereumAddress) > 0 {
		i -= len(m.EthereumAddress)
		copy(dAtA[i:], m.EthereumAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.EthereumAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateStakedAmountInfoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateStakedAmountInfoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateStakedAmountInfoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteStakedAmountInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteStakedAmountInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteStakedAmountInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.EthereumAddress) > 0 {
		i -= len(m.EthereumAddress)
		copy(dAtA[i:], m.EthereumAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.EthereumAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteStakedAmountInfoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteStakedAmountInfoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteStakedAmountInfoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateContractAddress) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateContractAddress) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateContractAddress) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateContractAddressResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateContractAddressResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateContractAddressResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateContractAddress) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateContractAddress) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateContractAddress) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateContractAddressResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateContractAddressResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateContractAddressResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteContractAddress) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteContractAddress) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteContractAddress) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteContractAddressResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteContractAddressResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteContractAddressResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgUpdateParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Params.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgUpdateParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateStakedAmountInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.EthereumAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.StakedAmount)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.LastUpdateTs != 0 {
		n += 1 + sovTx(uint64(m.LastUpdateTs))
	}
	return n
}

func (m *MsgCreateStakedAmountInfoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateStakedAmountInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.EthereumAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.StakedAmount)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.LastUpdateTs != 0 {
		n += 1 + sovTx(uint64(m.LastUpdateTs))
	}
	return n
}

func (m *MsgUpdateStakedAmountInfoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteStakedAmountInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.EthereumAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteStakedAmountInfoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateContractAddress) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateContractAddressResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateContractAddress) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateContractAddressResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteContractAddress) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteContractAddressResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgUpdateParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateStakedAmountInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateStakedAmountInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateStakedAmountInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EthereumAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EthereumAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StakedAmount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StakedAmount = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastUpdateTs", wireType)
			}
			m.LastUpdateTs = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastUpdateTs |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateStakedAmountInfoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateStakedAmountInfoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateStakedAmountInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateStakedAmountInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateStakedAmountInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateStakedAmountInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EthereumAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EthereumAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StakedAmount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StakedAmount = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastUpdateTs", wireType)
			}
			m.LastUpdateTs = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastUpdateTs |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateStakedAmountInfoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateStakedAmountInfoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateStakedAmountInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteStakedAmountInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteStakedAmountInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteStakedAmountInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EthereumAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EthereumAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteStakedAmountInfoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteStakedAmountInfoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteStakedAmountInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateContractAddress) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateContractAddress: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateContractAddress: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateContractAddressResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateContractAddressResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateContractAddressResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateContractAddress) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateContractAddress: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateContractAddress: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateContractAddressResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateContractAddressResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateContractAddressResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteContractAddress) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteContractAddress: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteContractAddress: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteContractAddressResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteContractAddressResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteContractAddressResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
